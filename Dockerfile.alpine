#
# ROMVault Dockerfile
#
# https://github.com/laromicas/docker-romvault
#
# NOTES:
#   - We are using Mono.
#   - Only 64-bits x86_64 supported right now, but
#     maybe later if there is demand I will try
#     to add ARM support.
#
ARG DOCKER_IMAGE_VERSION=

# Define software download URLs.
ARG ROMVAULT_URL=https://www.romvault.com

# Download ROMVault.
FROM alpine:3.16 AS rv
ARG ROMVAULT_URL
RUN \
    apk --no-cache add curl && \
    # Get latest version of ROMVault & RVCmd
    ROMVAULT_DOWNLOAD=$(curl ${ROMVAULT_URL} | \
        sed -n 's/.*href="\([^"]*\).*/\1/p' | \
        grep -i download | \
        grep -i romvault | \
        # sort -r | \
        head -1) \
        && \
    RVCMD_DOWNLOAD=$(curl ${ROMVAULT_URL} | \
        sed -n 's/.*href="\([^"]*\).*/\1/p' | \
        grep -i download | \
        grep -i rvcmd | \
        sort -r | \
        head -1) \
        && \
    echo ROMVAULT_DOWNLOAD=${ROMVAULT_DOWNLOAD} && \
    echo RVCMD_DOWNLOAD=${RVCMD_DOWNLOAD} && \
    # Document Versions
    echo "romvault" $(basename --suffix=.zip $ROMVAULT_DOWNLOAD | cut -d "_" -f 2) >> /VERSIONS && \
    echo "rvcmd" $(basename --suffix=.zip $RVCMD_DOWNLOAD | cut -d "_" -f 2) >> /VERSIONS && \
    # Download RomVault
    mkdir -p /defaults/ && mkdir -p /opt/romvault/ && \
    curl --output /defaults/romvault.zip "https://www.romvault.com/${ROMVAULT_DOWNLOAD}" && \
    curl --output /defaults/rvcmd.zip "https://www.romvault.com/${RVCMD_DOWNLOAD}" && \
    unzip /defaults/romvault.zip -d /opt/romvault/ && \
    unzip /defaults/rvcmd.zip -d /opt/romvault/

# Pull base image.
FROM jlesage/baseimage-gui:alpine-3.16-v4.4.0

# Install mono and dependencies.
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" | cat - /etc/apk/repositories  > repositories && mv -f repositories /etc/apk && \
    apk add --no-cache mono libgdiplus gtk+2.0 msttcorefonts-installer && \
    apk add --no-cache mono-dev git bash automake autoconf findutils make pkgconf libtool g++ && \
    apk add --no-cache --virtual=.build-dependencies ca-certificates && \
    cert-sync /etc/ssl/certs/ca-certificates.crt && \
    update-ms-fonts && \
    fc-cache -f && \
    mkdir -p /opt/ && \
    git clone https://github.com/mono/xsp.git /opt/xsp && \
    cd /opt/xsp && ./autogen.sh && ./configure --prefix=/usr && make && make install && \
    rm -rf /opt/xsp && \
    apk del .build-dependencies && \
    apk del mono-dev git bash automake autoconf findutils make pkgconf libtool g++

RUN \
    APP_ICON_URL=https://www.romvault.com/graphics/romvaultTZ.jpg && \
    install_app_icon.sh "$APP_ICON_URL"

# Add files.
COPY rootfs/ /
COPY --from=rv /opt/romvault/ /opt/romvault/

# Set internal environment variables.
RUN \
    set-cont-env APP_NAME "ROMVault" && \
    set-cont-env DOCKER_IMAGE_VERSION "$DOCKER_IMAGE_VERSION" && \
    true

# Metadata.
LABEL \
      org.label-schema.name="romvault" \
      org.label-schema.description="Docker container for ROMVault" \
      org.label-schema.version="${DOCKER_IMAGE_VERSION:-unknown}" \
      org.label-schema.vcs-url="https://github.com/laromicas/docker-romvault" \
      org.label-schema.schema-version="1.0"
